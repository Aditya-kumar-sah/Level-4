//solution of knapsack advanced
#include <bits/stdc++.h>

#define ll long long
#define mr make_pair

using namespace std;

ll max(ll a, ll b){
    if(a>b) return a;
    return b;
}

ll min(ll a, ll b){
    if(a<b) return a;
    return b;
}

int max(int a,int b){
    if(a>b) return a;
    return b;
}

int min(int a,int b){
    if(a<b) return a;
    return b;
}

void f(vector<ll> &v,ll &n){
   for(ll i = 0;i<n;i++){
       cin>>v[i];
   }
}

void sort(vector<ll>& v){
    sort(v.begin(),v.end());
}

void sort(vector<int>& v){
    sort(v.begin(),v.end());
}

int main(){
    ll n,W;
    cin>>n>>W;

    vector<ll> v(n),w(n);

    ll sum = 0;

    for(ll i=0;i<n;i++){
        cin>>w[i];
        cin>>v[i];
        sum += v[i];
    }


    vector<vector<ll>> dp(n+1,vector<ll>(sum+1,1e15));

    dp[n][0] = 0;


    for(ll i=n-1;i>=0;i--){
        for(ll j=0;j<=sum;j++){
            ll mini = 1e15;
            if(j-v[i]>=0) mini = dp[i+1][j-v[i]];
            dp[i][j] = min(dp[i+1][j],w[i]+mini);
        }
    }

    ll ans = -1;

    for(ll i=sum;i>=0;i--){
        if(dp[0][i] <= W){
            ans = i;
            break;
        }
    }

    cout<<ans<<endl;

}
